import { createSlice } from '@reduxjs/toolkit';

// Define the initial state of the slice
const initialState = {
  products: null,
  selectedProduct: null,
  status: 'idle', // or 'loading', 'failed'
};

// Create a slice of the Redux store
const productSlice = createSlice({
  name: 'products',
  initialState,
  reducers: {
    setProducts: (state, action) => {
      state.products =action.payload;
    },
    addProduct: (state, action) => {
      state.products.push(action.payload);
    },
    updateProduct: (state, action) => {
      const index = state.products.findIndex(product => product.id === action.payload.id);
      if (index !== -1) {
        state.products[index] = action.payload;
      }
    },
    deleteProduct: (state, action) => {
      state.products = state.products.filter(product => product.id !== action.payload);
    },
    setSelectedProduct: (state, action) => {
      state.selectedProduct = action.payload;
    },
    setStatus: (state, action) => {
      state.status = action.payload;
    },
  },
});

// Export the actions generated by the slice
export const { setProducts, addProduct, updateProduct, deleteProduct, setSelectedProduct, setStatus } = productSlice.actions;

// Export the reducer function to be used in the store
export default productSlice.reducer;
